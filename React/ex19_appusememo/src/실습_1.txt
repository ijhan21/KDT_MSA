import './App.css';
import {useState} from 'react';
//복잡한 계산
const hardCalculate = (number) =>{
  console.log("복잡한 논리를 가지는 계산")
  for(let i = 0 ; i < 999999999; i++){} //복잡한 논리 계산
  return number + 10000;
}

const easyCauculate = (number) =>{
  console.log("쉬운 계산");
  return number + 1;
}



function App() {
  const [hardNumber,setHardNumber] = useState(1);
  //state 값이 변경되면 App 함수는 다시 랜더링된다 ... 호출된다 ..
  const [easyNumber,setEasyNumber] =useState(1);

  
  const hardSum = hardCalculate(hardNumber);
  const easySum = easyCauculate(easyNumber);

  return (
    <div className="App">
        <h3>복잡한 계산기 논리 수행</h3>
        <input type="number"
         value={hardNumber}
         onChange={(e)=>setHardNumber(parseInt(e.target.value))}
        />
        <span>+ 10000 = {hardSum}</span>

        <h3>쉬운 계산기 논리 수행</h3>
        <input type="number"
         value={easyNumber}
         onChange={(e)=>setEasyNumber(parseInt(e.target.value))}
        />
        <span>+ 1 = {easySum}</span>
    </div>
  );
}
/*
   코드의 문제점
   두개 논리
   1. 복잡한 논리 함수  
   2. 단순한 논리 함수

   useState 값이 변경되면 ... App() 컴포넌트 재호출 .. 재런더링 ...
   함수의 값은 일반변수 초기화 ... useState 값 유지 ...

   2개 함수가 
   easy  쉬운 함수만 처리하기 싶어요 
   hardSum 호출
   easySum 호출

   결국  easySum +1 논리만 ... 

   제시) 함수의 초기화 두개의 함수 호출  (비율적)


   해결) useMemo 사용하면 어떤 조건을 만족하는 경우에 변수를 초기화 할 수 있게 한다

*/
export default App;
